What happens when you initialize a repository? Why do you need to do it?

	Git creates the structure that it needs to do version control. If you
	don't init, you can't commit, and you don't have version control.
	
How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is a user-selected subset of the differences between the
	working directory and the repo. It's how I choose what I commit.

How can you use the staging area to make sure you have one commit per logical
change?

	I can limit how much I stage. I can use git diff --staged to see what I'm 
	about to commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	If you have a program that works, it's probably best to ensure that the 
	master branch continues to work. Changes can be made on branches, and get
	completed and tested before being merged into the master.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
